//
// Generated by Bluespec Compiler, version 2024.01 (build ae2a2fc6)
//
// On Fri Apr  4 18:23:31 IST 2025
//
//
// Ports:
// Name                         I/O  size props
// chk_interrupt                  O     8
// chk_interrupt_prv              I     2
// chk_interrupt_mstatus          I    32
// chk_interrupt_mip              I    14
// chk_interrupt_mie              I    12
//
// Combinational paths from inputs to outputs:
//   (chk_interrupt_prv,
//    chk_interrupt_mstatus,
//    chk_interrupt_mip,
//    chk_interrupt_mie) -> chk_interrupt
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_chk_interrupt(chk_interrupt_prv,
			    chk_interrupt_mstatus,
			    chk_interrupt_mip,
			    chk_interrupt_mie,
			    chk_interrupt);
  // value method chk_interrupt
  input  [1 : 0] chk_interrupt_prv;
  input  [31 : 0] chk_interrupt_mstatus;
  input  [13 : 0] chk_interrupt_mip;
  input  [11 : 0] chk_interrupt_mie;
  output [7 : 0] chk_interrupt;

  // signals for module outputs
  wire [7 : 0] chk_interrupt;

  // remaining internal signals
  wire [13 : 0] pending_interrupts__h29;
  wire [11 : 0] m_interrupts__h28, x__h186, y__h114;
  wire [5 : 0] x__h24;

  // value method chk_interrupt
  assign chk_interrupt =
	     { x__h24, pending_interrupts__h29 != 14'd0, x__h186 != 12'd0 } ;

  // remaining internal signals
  assign m_interrupts__h28 = x__h186 & y__h114 ;
  assign pending_interrupts__h29 =
	     (chk_interrupt_prv != 2'd3 || chk_interrupt_mstatus[3]) ?
	       { 2'd0, m_interrupts__h28 } :
	       14'd0 ;
  assign x__h186 = chk_interrupt_mie & chk_interrupt_mip[11:0] ;
  assign x__h24 =
	     { 1'b1,
	       pending_interrupts__h29[11] ?
		 5'd11 :
		 (pending_interrupts__h29[3] ?
		    5'd3 :
		    (pending_interrupts__h29[7] ? 5'd7 : 5'd31)) } ;
  assign y__h114 =
	     {12{chk_interrupt_prv != 2'd3 || chk_interrupt_mstatus[3]}} ;
endmodule  // module_chk_interrupt

