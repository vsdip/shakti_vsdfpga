//
// Generated by Bluespec Compiler, version 2024.01 (build ae2a2fc6)
//
// On Fri Apr  4 18:23:31 IST 2025
//
//
// Ports:
// Name                         I/O  size props
// address_valid                  O     1
// address_valid_addr             I    12
// address_valid_misa             I    26 unused
//
// Combinational paths from inputs to outputs:
//   address_valid_addr -> address_valid
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_address_valid(address_valid_addr,
			    address_valid_misa,
			    address_valid);
  // value method address_valid
  input  [11 : 0] address_valid_addr;
  input  [25 : 0] address_valid_misa;
  output address_valid;

  // signals for module outputs
  wire address_valid;

  // remaining internal signals
  reg CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2,
      CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1;

  // value method address_valid
  assign address_valid =
	     (address_valid_addr[9:8] == 2'b0) ?
	       ((address_valid_addr[11:10] == 2'b0) ?
		  address_valid_addr[7:0] == 8'h01 ||
		  address_valid_addr[7:0] == 8'h02 ||
		  address_valid_addr[7:0] == 8'h03 :
		  address_valid_addr[11:10] == 2'b10 &&
		  address_valid_addr[7:0] == 8'd0) :
	       address_valid_addr[9:8] == 2'b11 &&
	       CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2 ;

  // remaining internal signals
  always@(address_valid_addr)
  begin
    case (address_valid_addr[7:4])
      4'd0:
	  CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1 =
	      address_valid_addr[3:0] == 4'h0 ||
	      address_valid_addr[3:0] == 4'd1 ||
	      address_valid_addr[3:0] == 4'h4 ||
	      address_valid_addr[3:0] == 4'h5 ||
	      address_valid_addr[3:0] == 4'h6;
      4'h2:
	  CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1 =
	      address_valid_addr[3:0] > 4'd2;
      default: CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1 =
		   address_valid_addr[7:4] == 4'h3 ||
		   address_valid_addr[7:4] == 4'h4 &&
		   (address_valid_addr[3:0] == 4'h0 ||
		    address_valid_addr[3:0] == 4'd1 ||
		    address_valid_addr[3:0] == 4'h2 ||
		    address_valid_addr[3:0] == 4'h3 ||
		    address_valid_addr[3:0] == 4'h4);
    endcase
  end
  always@(address_valid_addr or
	  CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1)
  begin
    case (address_valid_addr[11:10])
      2'b0:
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2 =
	      CASE_address_valid_addr_BITS_7_TO_4_0_address__ETC__q1;
      2'b11:
	  CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2 =
	      address_valid_addr[7:4] == 4'd1 &&
	      (address_valid_addr[3:0] == 4'd1 ||
	       address_valid_addr[3:0] == 4'h2 ||
	       address_valid_addr[3:0] == 4'h3 ||
	       address_valid_addr[3:0] == 4'h4);
      default: CASE_address_valid_addr_BITS_11_TO_10_0b0_CASE_ETC__q2 =
		   address_valid_addr[11:10] == 2'b10 &&
		   (address_valid_addr[7:4] == 4'd0 ||
		    address_valid_addr[7:4] == 4'd8) &&
		   address_valid_addr[3:0] != 4'd1;
    endcase
  end
endmodule  // module_address_valid

